include:
  - project: 'gigwork/ci/templates'
    ref: master
    file: '.release_docker_image.yml'
  - project: 'gigwork/ci/templates'
    ref: master
    file: '.job_base.yml'
  - project: 'gigwork/ci/templates'
    ref: master
    file: 'ssh/.add_ssh_known_host.yml'  
  - project: 'gigwork/ci/templates'
    ref: master
    file: 'ssh/.init_ssh.yml'      

stages:
  - Build
  - Test
  - Report
  - Release
  - Deploy

image: registry.gigwork.ru/gigwork/ci/msa-backend/php-80

variables:
  KAFKA_HOST: ""
  KAFKA_PORT: ""
  KAFKA_USER: ""
  KAFKA_PASS: ""
  KAFKA_MECHANISM: ""
  KAFKA_PROTOCOL: ""
  KAFKA_CERTIFICATE_LOCATION: ""
  KAFKA_TOPIC: ""
  KAFKA_GROUP: ""

Build:
  extends: .job_base
  stage: Build
  variables:
    DATABASE_URL: ""
  script:
    - touch .env
    - composer install
  artifacts:
    expire_in: 30 min
    paths:
      - .env
      - var/
      - vendor/
      - public/

################## Tests and code analysis ##################
######################## Parts of Jobs ######################

.job_phpunit: &job_phpunit
  extends: .job_base
  stage: Test
  when: always
  script:
    - php -v
    - export XDEBUG_MODE=coverage
    - ./vendor/bin/phpunit --coverage-text --colors=never --coverage-cobertura=coverage.xml
  dependencies:
    - Build

.job_phpunit_coverage: &job_phpunit_coverage
  <<: *job_phpunit
  stage: Report
  when: manual
  script:
    - _INTRANET=https://gigwork.space
    - _INTRANET_HOST=portal-ya1.gigwork
    - !reference [.init_ssh, script]
    - ADD_SSH_HOST=${_INTRANET_HOST}
    - !reference [.add_ssh_known_host, script]
    - echo -e "\e[42m\e[30m Создаем отчет по покрытию \e[0m"
    - LOCAL_REPORT_PATH=/tmp/phpunit
    - LOCAL_REPORT_FILE=/tmp/phpunit_${CI_COMMIT_SHA}.tar.gz
    - REMOVE_REPORT_PATH=/srv/portal/files/data/phpunit/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}
    - REMOVE_REPORT_FILE=/srv/portal/phpunit_${CI_COMMIT_SHA}.tar.gz
    - export XDEBUG_MODE=coverage
    - ./vendor/bin/phpunit --testsuite "Php Unit" --coverage-text --colors=never --coverage-html=${LOCAL_REPORT_PATH}/html --coverage-xml=${LOCAL_REPORT_PATH}/xml --log-junit=${LOCAL_REPORT_PATH}/log.xml || { ERR=1; true; }
    - echo "{\"title\":\"${CI_PROJECT_TITLE}\", \"gitlab\":\"${CI_SERVER_URL}\", \"project\":\"${CI_PROJECT_PATH}\", \"name\":\"${CI_PROJECT_NAME}\"}" > ${LOCAL_REPORT_PATH}/info.json
    - echo -e "\e[42m\e[30m Публикуем отчет по покрытию \e[0m"
    - tar -cpf ${LOCAL_REPORT_FILE} -C ${LOCAL_REPORT_PATH} ./
    - rsync --recursive --verbose --checksum --delete --rsh=ssh --rsync-path="sudo -u ${_SSH_SUDOER} rsync" ${LOCAL_REPORT_FILE} "${_SSH_USER}@${_INTRANET_HOST}:${REMOVE_REPORT_FILE}"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} rm -rf ${REMOVE_REPORT_PATH}"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} mkdir -p ${REMOVE_REPORT_PATH}"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} tar -xf ${REMOVE_REPORT_FILE} -C ${REMOVE_REPORT_PATH}"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} rm ${REMOVE_REPORT_FILE}"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} /srv/portal/current/cli reports/save --report=phpunit --project=${CI_PROJECT_NAME} --branch=${CI_COMMIT_REF_NAME}"
    - echo -e "\e[42m Отчет \e[0m ${_INTRANET}/reports/phpunit/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}/report"
    - if [[ "$ERR" == "1" ]]; then exit 1; fi
  dependencies:
    - Build

.job_phpcs: &job_phpcs
  extends: .job_base
  stage: Report
  when: manual
  needs: []

.job_phpcs_compatibility: &job_phpcs_compatibility
  <<: *job_phpcs
  script:
    - _INTRANET=https://gigwork.space
    - _INTRANET_HOST=portal-ya1.gigwork
    - !reference [.init_ssh, script]
    - ADD_SSH_HOST=${_INTRANET_HOST}
    - !reference [.add_ssh_known_host, script]
    - echo -e "\e[43m\e[30m Проверяем на соответсвие кода верси PHP v.${VERSION} \e[0m"
    - LOCAL_REPORT_FILE=./${VERSION}.json
    - touch ${LOCAL_REPORT_FILE}
    - phpcs -p ./src ./tests --extensions=php --basepath=. --standard=${STYLE} --report=json --report-file=${LOCAL_REPORT_FILE} --runtime-set testVersion ${VERSION} || true
    - REMOVE_REPORT_PATH=/srv/portal/files/data/phpcs_compatibility/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} mkdir -p ${REMOVE_REPORT_PATH}"
    - rsync --recursive --verbose --checksum --delete --rsh=ssh --rsync-path="sudo -u ${_SSH_SUDOER} rsync" ${LOCAL_REPORT_FILE} "${_SSH_USER}@${_INTRANET_HOST}:${REMOVE_REPORT_PATH}/"
    - REPORT="<?php return ['title'=>'${CI_PROJECT_TITLE}','subtitle'=>'Совместимость с PHP v.${VERSION}','url'=>'${CI_PROJECT_URL}'];"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} bash -c \"echo \\\"${REPORT}\\\" > ${REMOVE_REPORT_PATH}/${VERSION}.php\""
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} /srv/portal/current/cli phpcs/transform --in=phpcs_compatibility/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}/${VERSION}.json --out=phpcs_compatibility/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}/${VERSION}"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} /srv/portal/current/cli reports/save --report=phpcs_compatibility --project=${CI_PROJECT_NAME} --branch=${CI_COMMIT_REF_NAME}"
    - echo -e "\e[42m Отчет \e[0m ${_INTRANET}/reports/phpcs_compatibility/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}/${VERSION}.html"

.job_phpcs_style: &job_phpcs_style
  <<: *job_phpcs
  script:
    - _INTRANET=https://gigwork.space
    - _INTRANET_HOST=portal-ya1.gigwork
    - !reference [.init_ssh, script]
    - ADD_SSH_HOST=${_INTRANET_HOST}
    - !reference [.add_ssh_known_host, script]
    - echo -e "\e[43m\e[30m Проверяем на соответсвие кода стандарту ${STYLE} \e[0m"
    - LOCAL_REPORT_FILE=./${STYLE}.json
    - touch ${LOCAL_REPORT_FILE}
    - phpcs -p ./src ./tests --extensions=php --basepath=. --severity=1 --standard=${STYLE} --report=json --report-file=${LOCAL_REPORT_FILE} || true
    - REMOVE_REPORT_PATH=/srv/portal/files/data/phpcs_style/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} mkdir -p ${REMOVE_REPORT_PATH}"
    - rsync --recursive --verbose --checksum --delete --rsh=ssh --rsync-path="sudo -u ${_SSH_SUDOER} rsync" ${LOCAL_REPORT_FILE} "${_SSH_USER}@${_INTRANET_HOST}:${REMOVE_REPORT_PATH}/"
    - REPORT="<?php return ['title'=>'${CI_PROJECT_TITLE}','subtitle'=>'Сответсвие стандарту ${STYLE}','url'=>'${CI_PROJECT_URL}'];"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} bash -c \"echo \\\"${REPORT}\\\" > ${REMOVE_REPORT_PATH}/${STYLE}.php\""
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} /srv/portal/current/cli phpcs/transform --in=phpcs_style/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}/${STYLE}.json --out=phpcs_style/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}/${STYLE}"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} /srv/portal/current/cli reports/save --report=phpcs_style --project=${CI_PROJECT_NAME} --branch=${CI_COMMIT_REF_NAME}"
    - echo -e "\e[42m Отчет \e[0m ${_INTRANET}/reports/phpcs_style/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}/${STYLE}.html"
      

################## Jobs from stage test ##################

PhpUnit 8.0:
  <<: *job_phpunit
  artifacts:
    reports:
      cobertura: coverage.xml

Migrations:
  stage: Test
  services:
    - name: postgres:13.4
      alias: db
  variables:
    POSTGRES_DB: "msa-test"
    POSTGRES_USER: "gigant"
    POSTGRES_PASSWORD: "gigant"
    DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
    CORS_ALLOW_ORIGIN: "/*/"
    JWT_SECRET_KEY: "%kernel.project_dir%/config/jwt/private.pem"
    JWT_PUBLIC_KEY: "%kernel.project_dir%/config/jwt/public.pem"
    JWT_PASSPHRASE: "secret"
    APP_ENV: "test"
  script:
    - symfony php bin/console doctrine:migrations:migrate --no-interaction
    - symfony php bin/console doctrine:schema:validate
    - symfony php bin/console doctrine:migrations:migrate first --no-interaction
  dependencies:
    - Build

################## Jobs from stage report ##################

PhpUnit coverage:
  <<: *job_phpunit_coverage
  needs: [ "Build" ]
  except:
    - schedules

PHP v8.0 compatibility schedule:
  <<: *job_phpcs_compatibility
  when: manual
  except:
      - schedules
  variables:
    STYLE: "PHPCompatibility"
    VERSION: "8.0"

PHP v8.1 compatibility schedule:
  <<: *job_phpcs_compatibility
  when: manual
  except:
      - schedules
  variables:
    STYLE: "PHPCompatibility"
    VERSION: "8.1"

PSR2 code syle schedule:
  <<: *job_phpcs_style
  when: manual
  except:
    - schedules
  variables:
    STYLE: "PSR2"

PSR12 code syle schedule:
  <<: *job_phpcs_style
  when: manual
  except:
    - schedules
  variables:
    STYLE: "PSR12"

