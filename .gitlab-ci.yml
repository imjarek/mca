.release_docker_image: &release_docker_image |
  docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  docker build -t ${CI_REGISTRY_IMAGE}${BACKEND_STATIC_IMAGE_PATH}:$CI_COMMIT_REF_NAME --build-arg APP_VERSION=${CI_COMMIT_REF_NAME} --build-arg CI_COMMIT_SHA=${CI_COMMIT_SHA} -f $DOCKERFILE_PATH .
  docker push ${CI_REGISTRY_IMAGE}${BACKEND_STATIC_IMAGE_PATH}:$CI_COMMIT_REF_NAME

stages:
  - Build
  - Test
  - Report
  - Release
  - Deploy

variables:
  KAFKA_HOST: ""
  KAFKA_PORT: ""
  KAFKA_USER: ""
  KAFKA_PASS: ""
  KAFKA_MECHANISM: ""
  KAFKA_PROTOCOL: ""
  KAFKA_CERTIFICATE_LOCATION: ""
  KAFKA_TOPIC: ""
  KAFKA_GROUP: ""

Build:
  image: registry.gigwork.ru/gigwork/ci/msa-backend/php-80
  stage: Build
  variables:
    DATABASE_URL: ""
  script:
    - cd src
    - touch .env
    - composer install
  artifacts:
    expire_in: 30 min
    paths:
      - .env
      - var/
      - vendor/
      - public/

################## Tests and code analysis ##################
######################## Parts of Jobs ######################

.job_base: &job_base
  before_script:
    - echo -e "\e[43m\e[30m Время старта:" `date '+%Y-%m-%d %H:%M:%S'` " \e[0m"
    - echo -e "\e[43m\e[30m Задача '$CI_BUILD_NAME', Ветка '$CI_BUILD_REF_NAME', Стадия '$CI_BUILD_STAGE', Код сборки '$CI_PIPELINE_IID' \e[0m"
  after_script:
    - echo -e "\e[43m\e[30m Время окончания:" `date '+%Y-%m-%d %H:%M:%S'` " \e[0m"

.script_init_ssh: &script_init_ssh |
  echo -e "\e[43m\e[30m Настраиваем SSH \e[0m"
  rm -rf ~/.ssh
  mkdir -p ~/.ssh
  cat $_SSH_PRIVATE_KEY | tr -d '\r' > ~/.ssh/id_rsa
  cat $_SSH_PUBLIC_KEY | tr -d '\r' > ~/.ssh/id_rsa.pub
  touch ~/.ssh/known_hosts
  echo -e "Host *\n    StrictHostKeyChecking no\n    UserKnownHostsFile /dev/null\n    LogLevel ERROR" > ~/.ssh/config
  chmod 700 ~/.ssh
  chmod 600 ~/.ssh/id_rsa
  chmod 644 ~/.ssh/id_rsa.pub
  chmod 600 ~/.ssh/known_hosts
  sudo chmod 400 ~/.ssh/config

.script_add_ssh_host: &script_add_ssh_host |
  ssh-keyscan -H "${ADD_SSH_HOST}" >> ~/.ssh/known_hosts 2>/dev/null
  echo -e "\e[42m\e[30m Добаляем SSH host ${ADD_SSH_HOST} \e[0m"


.job_phpunit: &job_phpunit
  <<: *job_base
  image: registry.gigwork.ru/gigwork/ci/msa-backend/php-80
  stage: Test
  when: always
  script:
    - php -v
    - export XDEBUG_MODE=coverage
    - ./vendor/bin/phpunit --coverage-text --colors=never --testsuite "Php Unit" --coverage-cobertura=coverage.xml
  dependencies:
    - Build

.job_phpunit_coverage: &job_phpunit_coverage
  <<: *job_phpunit
  stage: Report
  when: manual
  script:
    - _INTRANET=https://gigwork.space
    - _INTRANET_HOST=portal-ya1.gigwork
    - *script_init_ssh
    - ADD_SSH_HOST=${_INTRANET_HOST}
    - *script_add_ssh_host
    - echo -e "\e[42m\e[30m Создаем отчет по покрытию \e[0m"
    - LOCAL_REPORT_PATH=/tmp/phpunit
    - LOCAL_REPORT_FILE=/tmp/phpunit_${CI_COMMIT_SHA}.tar.gz
    - REMOVE_REPORT_PATH=/srv/portal/files/data/phpunit/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}
    - REMOVE_REPORT_FILE=/srv/portal/phpunit_${CI_COMMIT_SHA}.tar.gz
    - export XDEBUG_MODE=coverage
    - ./vendor/bin/phpunit --testsuite "Php Unit" --coverage-text --colors=never --coverage-html=${LOCAL_REPORT_PATH}/html --coverage-xml=${LOCAL_REPORT_PATH}/xml --log-junit=${LOCAL_REPORT_PATH}/log.xml || { ERR=1; true; }
    - echo "{\"title\":\"${CI_PROJECT_TITLE}\", \"gitlab\":\"${CI_SERVER_URL}\", \"project\":\"${CI_PROJECT_PATH}\", \"name\":\"${CI_PROJECT_NAME}\"}" > ${LOCAL_REPORT_PATH}/info.json
    - echo -e "\e[42m\e[30m Публикуем отчет по покрытию \e[0m"
    - tar -cpf ${LOCAL_REPORT_FILE} -C ${LOCAL_REPORT_PATH} ./
    - rsync --recursive --verbose --checksum --delete --rsh=ssh --rsync-path="sudo -u ${_SSH_SUDOER} rsync" ${LOCAL_REPORT_FILE} "${_SSH_USER}@${_INTRANET_HOST}:${REMOVE_REPORT_FILE}"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} rm -rf ${REMOVE_REPORT_PATH}"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} mkdir -p ${REMOVE_REPORT_PATH}"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} tar -xf ${REMOVE_REPORT_FILE} -C ${REMOVE_REPORT_PATH}"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} rm ${REMOVE_REPORT_FILE}"
    - ssh ${_SSH_USER}@${_INTRANET_HOST} "sudo -u ${_SSH_SUDOER} /srv/portal/current/cli reports/save --report=phpunit --project=${CI_PROJECT_NAME} --branch=${CI_COMMIT_REF_NAME}"
    - echo -e "\e[42m Отчет \e[0m ${_INTRANET}/reports/phpunit/${CI_PROJECT_NAME}/${CI_COMMIT_REF_NAME}/"
    - if [[ "$ERR" == "1" ]]; then exit 1; fi
  dependencies:
    - Build

################## Jobs from stage test ##################

PhpUnit 8.0:
  <<: *job_phpunit
  image: registry.gigwork.ru/gigwork/ci/msa-backend/php-80
  artifacts:
    reports:
      cobertura: coverage.xml

################## Jobs from stage report ##################

PhpUnit coverage:
  <<: *job_phpunit_coverage
  needs: [ "Build" ]
  except:
    - schedules

